labs(title = "Total de Utentes com Hipertensão por Ano",
x = "Ano",
y = "Total de Utentes") +
theme_minimal()
# Total por ano para pessoas com menos de 65 anos
hipertensao_ano_menos_65 <- hyp_final %>%
mutate(Ano = year(ym(tempo))) %>%
group_by(Ano) %>%
summarise(hip_menos_65 = sum(as.numeric(contagem_de_utentes_inscritos_com_hipertensao_arterial_com_pressao_arterial_inferior_a_150_90_mmhg_n), na.rm = TRUE), .groups = "drop") %>%
st_set_geometry(NULL)
ggplot(hipertensao_ano_menos_65, aes(x = factor(Ano), y = hip_menos_65)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = round(hip_menos_65)), vjust = -0.25, size = 3) +
labs(title = "Total de Utentes com menos de 65 anos com Hipertensão por Ano",
x = "Ano",
y = "Total de Utentes") +
theme_minimal()
# Comparação entre menos de 65 e 65 ou mais
hipertensao_comp_ano <- hipertensao_ano %>%
left_join(hipertensao_ano_menos_65, by = "Ano") %>%
mutate(
hip_menos_65 = ifelse(is.na(hip_menos_65), 0, hip_menos_65),
hip_mais_65 = total - hip_menos_65
) %>%
select(Ano, hip_menos_65, hip_mais_65) %>%
pivot_longer(
cols = c(hip_menos_65, hip_mais_65),
names_to = "Grupo",
values_to = "total"
) %>%
mutate(
Grupo = dplyr::recode(Grupo,
"hip_menos_65" = "Menos de 65 anos",
"hip_mais_65" = "65 anos ou mais")
)
# Gráfico empilhado
ggplot(hipertensao_comp_ano, aes(x = factor(Ano), y = total, fill = Grupo)) +
geom_col() +
labs(
title = "Hipertensão por Idade e Ano",
x = "Ano",
y = "Número de Utentes"
) +
theme_minimal()
# Hipertensão por mês - Total
hipertensao_mes <- hyp_final %>%
mutate(Data = ym(tempo),
Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(total = sum(as.numeric(total), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name)) %>%
st_set_geometry(NULL)
ggplot(hipertensao_mes, aes(x = Mes, y = total)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = round(total)), vjust = -0.25, size = 3) +
labs(title = "Total de Utentes com Hipertensão por Mês",
x = "Mês",
y = "Total de Utentes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Hipertensão por mês - Menos de 65
hipertensao_mes_65 <- hyp_final %>%
mutate(Data_65 = ym(tempo),
Mes_65 = month(Data_65, label = TRUE, abbr = FALSE)) %>%
group_by(Mes_65) %>%
summarise(hip_menos_65 = sum(as.numeric(contagem_de_utentes_inscritos_com_hipertensao_arterial_com_pressao_arterial_inferior_a_150_90_mmhg_n), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes_65, month.name)) %>%
st_set_geometry(NULL)
ggplot(hipertensao_mes_65, aes(x = Mes_65, y = hip_menos_65)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = round(hip_menos_65)), vjust = -0.25, size = 3) +
labs(title = "Utentes <65 anos com Hipertensão por Mês",
x = "Mês",
y = "Total de Utentes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Tabela de meses em português
meses_pt <- c("janeiro", "fevereiro", "março", "abril", "maio", "junho",
"julho", "agosto", "setembro", "outubro", "novembro", "dezembro")
mes_lookup <- c(
"january" = "janeiro", "february" = "fevereiro", "march" = "março",
"april" = "abril", "may" = "maio", "june" = "junho",
"july" = "julho", "august" = "agosto", "september" = "setembro",
"october" = "outubro", "november" = "novembro", "december" = "dezembro"
)
# Juntar total e <65, calcular >=65
hipertensao_comp_mes <- hipertensao_mes %>%
left_join(hipertensao_mes_65, by = c("Mes" = "Mes_65")) %>%
mutate(
hip_menos_65 = ifelse(is.na(hip_menos_65), 0, hip_menos_65),
hip_mais_65 = total - hip_menos_65,
Mes = dplyr::recode(tolower(as.character(Mes)), !!!mes_lookup),
Mes = factor(Mes, levels = meses_pt)
) %>%
select(Mes, hip_menos_65, hip_mais_65) %>%
pivot_longer(
cols = c(hip_menos_65, hip_mais_65),
names_to = "Grupo",
values_to = "Total_hip"
) %>%
mutate(
Grupo = dplyr::recode(Grupo,
"hip_menos_65" = "Menos de 65 anos",
"hip_mais_65" = "65 anos ou mais")
)
# Gráfico final - barras empilhadas
ggplot(hipertensao_comp_mes, aes(x = Mes, y = Total_hip, fill = Grupo)) +
geom_col() +
labs(
title = "Hipertensão por Idade e Mês",
x = "Mês",
y = "Número de Utentes"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
## Análise do dataset avc:
#Quais os anos e meses é que estão registados no AVC
meses_por_ano_avc <- avc %>%
mutate(Ano_avc = year(ym(Período)),
Mes_avc = month(ym(Período), label = TRUE, abbr = FALSE)) %>%
distinct(Ano_avc, Mes_avc) %>%
arrange(Ano_avc, Mes_avc) %>%
group_by(Ano_avc) %>%
summarise(Meses_Disponiveis = paste(Mes_avc, collapse = ", "))
#Ver missing values
sapply(avc, function(x) sum(is.na(x) | x == ""))
# Distribuição por Género com AVC
avc_genero <- avc %>%
group_by(Género.da.Vítima) %>%
summarise(Total_AVC = sum(as.numeric(`N.º.de.registos.Via.Verde.AVC`), na.rm = TRUE)) %>%
arrange(desc(Total_AVC))
ggplot(avc_genero, aes(x = reorder(Género.da.Vítima, -Total_AVC), y = Total_AVC, fill = Género.da.Vítima)) +
geom_col() +
geom_text(aes(label = Total_AVC), vjust = -0.2, size = 2) +
labs(title = "Total de Registos de AVC por Género",
x = "Género",
y = "Total de AVC") +
theme_minimal()
# Distribuição por Género com AVC em cada ano
avc_genero_ano <- avc %>%
mutate(Ano = year(ym(Período))) %>%
group_by(Ano, Género.da.Vítima) %>%
summarise(Total_AVC = sum(as.numeric(N.º.de.registos.Via.Verde.AVC), na.rm = TRUE), .groups = "drop")
ggplot(avc_genero_ano, aes(x = factor(Ano), y = Total_AVC, fill = Género.da.Vítima)) +
geom_col(position = "dodge") +
geom_text(aes(label = Total_AVC), position = position_dodge(width = 0.9), vjust = -0.25, size = 3) +
labs(title = "Total de Registos de AVC por Ano e Género",
x = "Ano",
y = "Total de AVC",
fill = "Género") +
theme_minimal()
# Distribuição por Género com AVC em cada mês
avc_genero_mes <- avc %>%
mutate(Mes_Ano = format(ym(Período), "%Y-%m")) %>%
group_by(Mes_Ano, `Género.da.Vítima`) %>%
summarise(Total_AVC = sum(as.numeric(`N.º.de.registos.Via.Verde.AVC`), na.rm = TRUE), .groups = "drop")
ggplot(avc_genero_mes, aes(x = Mes_Ano, y = Total_AVC, fill = `Género.da.Vítima`)) +
geom_col(position = "dodge") +
labs(title = "Distribuição de AVC por Gênero e Mês",
x = "Mês", y = "Total de Registos", fill = "Gênero") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Distribuição Faixa Etária com AVC no total dos anos
# Define the correct order of age ranges
faixa_ordem <- c("0 - 17", "18 - 29", "30 - 39", "40 - 49", "50 - 59",
"60 - 69", "70 - 79", "80 - 89", "90 - 99", ">100")
# Apply the order using factor
avc_idade <- avc %>%
group_by(`Faixa.Etária.da.Vítima`) %>%
summarise(Total_AVC = sum(as.numeric(`N.º.de.registos.Via.Verde.AVC`), na.rm = TRUE)) %>%
mutate(`Faixa.Etária.da.Vítima` = factor(`Faixa.Etária.da.Vítima`, levels = faixa_ordem)) %>%
arrange(`Faixa.Etária.da.Vítima`)
# Plot
ggplot(avc_idade, aes(x = `Faixa.Etária.da.Vítima`, y = Total_AVC)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = Total_AVC), vjust = -0.2, size = 2) +
labs(title = "Total de Registos de AVC por Faixa Etária",
x = "Faixa Etária",
y = "Total de AVC") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Distribuição Faixa Etária com AVC em cada ano
avc_faixa_ano <- avc %>%
mutate(Ano = year(ym(Período))) %>%
group_by(Ano, `Faixa.Etária.da.Vítima`) %>%
summarise(Total_AVC = sum(as.numeric(`N.º.de.registos.Via.Verde.AVC`), na.rm = TRUE), .groups = "drop") %>% mutate(`Faixa.Etária.da.Vítima` = factor(`Faixa.Etária.da.Vítima`, levels = faixa_ordem)) %>%
arrange(`Faixa.Etária.da.Vítima`)
ggplot(avc_faixa_ano, aes(x = factor(Ano), y = Total_AVC, fill = `Faixa.Etária.da.Vítima`)) +
geom_col(position = "dodge") +
labs(title = "Total de Registos de AVC por Ano e Faixa Etária",
x = "Ano",
y = "Total de AVC",
fill = "Faixa Etária") +
theme_minimal()
# Distribuição Faixa Etária com AVC em cada mês
avc_faixa_mes <- avc %>%
mutate(Mes_Ano = format(ym(Período), "%Y-%m")) %>%
group_by(Mes_Ano, `Faixa.Etária.da.Vítima`) %>%
summarise(Total_AVC = sum(as.numeric(`N.º.de.registos.Via.Verde.AVC`), na.rm = TRUE), .groups = "drop") %>% mutate(`Faixa.Etária.da.Vítima` = factor(`Faixa.Etária.da.Vítima`, levels = faixa_ordem)) %>%
arrange(`Faixa.Etária.da.Vítima`)
ggplot(avc_faixa_mes, aes(x = Mes_Ano, y = Total_AVC, fill = `Faixa.Etária.da.Vítima`)) +
geom_col(position = "dodge") +
labs(title = "Distribuição de AVC por Faixa Etária e Mês",
x = "Mês", y = "Total de Registos", fill = "Faixa Etária") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Género × Faixa Etária ao longos do período
avc_cross <- avc %>%
group_by(`Género.da.Vítima`, `Faixa.Etária.da.Vítima`) %>%
summarise(Total_AVC = sum(as.numeric(`N.º.de.registos.Via.Verde.AVC`), na.rm = TRUE)) %>%
ungroup() %>% mutate(`Faixa.Etária.da.Vítima` = factor(`Faixa.Etária.da.Vítima`, levels = faixa_ordem)) %>%
arrange(`Faixa.Etária.da.Vítima`)
ggplot(avc_cross, aes(x = `Faixa.Etária.da.Vítima`, y = Total_AVC, fill = `Género.da.Vítima`)) +
geom_col(position = "dodge") +
labs(title = "Distribuição de AVC por Género e Faixa Etária", x = "Faixa Etária", y = "Total de AVC", fill = "Género") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Correlação entre Hipertensos e AVC por grupo etário ( maiores de 65 anos e menores de 65 anos)
# Clean names
avc <- avc %>% janitor::clean_names()
# Fix column name
names(avc)[names(avc) == "n_o_de_registos_via_verde_avc"] <- "n_de_registos_via_verde_avc"
# Dividimos o AVC em maiores de 65 anos (desde a faixa etária 60-69 anos) e menores de 65 anos (até à faixa etária 50-59)
avc_clean <- avc %>%
mutate(
faixa_inicio = as.numeric(str_extract(faixa_etaria_da_vitima, "^\\d+")),
faixa_fim = as.numeric(str_extract(faixa_etaria_da_vitima, "\\d+$")),
grupo = case_when(
faixa_inicio < 69 ~ "Menos de 65 anos",
TRUE ~ "65 anos ou mais"
),
mes_num = as.integer(str_sub(periodo, 6, 7)),
mes = factor(meses_pt[mes_num], levels = meses_pt),
n_de_registos_via_verde_avc = as.numeric(n_de_registos_via_verde_avc)
) %>%
group_by(mes, grupo) %>%
summarise(total_avc = sum(n_de_registos_via_verde_avc, na.rm = TRUE), .groups = "drop")
# Filtrar dados entre janeiro de 2022 e fevereiro de 2024 da hipertensão e dispor em meses
hyp_filtrado <- hyp_final %>%
st_set_geometry(NULL) %>%  # <- Remove geometria sf
mutate(Data = ym(tempo)) %>%
filter(Data >= ym("2022-01") & Data <= ym("2024-02"))
# Calcular hipertensão total por mês (nome do mês)
hipertensao_mes_filtrado <- hyp_filtrado %>%
mutate(Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(total = sum(as.numeric(total), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name))
# Calcular hipertensão por mês para pessoas com menos de 65 anos
hipertensao_mes_65_filtrado <- hyp_filtrado %>%
mutate(Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(hip_65 = sum(as.numeric(contagem_de_utentes_inscritos_com_hipertensao_arterial_com_pressao_arterial_inferior_a_150_90_mmhg_n), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name))
# Combinar dados e preparar gráfico empilhado
hipertensao_comp_mes_filtrado <- hipertensao_mes_filtrado %>%
left_join(hipertensao_mes_65_filtrado, by = "Mes") %>%
mutate(
hip_65 = ifelse(is.na(hip_65), 0, hip_65),
hip_mais_65 = total - hip_65,
Mes = mes_lookup[Mes],  # <- usar nomes da tabela (e não tolower)
Mes = factor(Mes, levels = meses_pt)
) %>%
select(Mes, hip_65, hip_mais_65) %>%
pivot_longer(
cols = c("hip_65", "hip_mais_65"),
names_to = "Grupo",
values_to = "Total_hip"
) %>%
mutate(
Grupo = dplyr::recode(Grupo,
"hip_65" = "Menos de 65 anos",
"hip_mais_65" = "65 anos ou mais")
)
# Plot
ggplot(hipertensao_comp_mes_filtrado, aes(x = Mes, y = Total_hip, fill = Grupo)) +
geom_col() +
labs(
title = "Hipertensão por Idade e Mês (2022-01 a 2024-02)",
x = "Mês",
y = "Número de Utentes"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
hipertensao_summary <- hipertensao_comp_mes %>%
group_by(Mes, Grupo) %>%
summarise(Total_HIP = sum(Total_hip), .groups = "drop")
# Make sure both have same column names for join
hipertensao_summary <- hipertensao_summary %>%
rename(mes = Mes, grupo = Grupo)
merged <- left_join(hipertensao_summary, avc_clean, by = c("mes", "grupo"))
cor_results <- merged %>%
group_by(grupo) %>%
summarise(correl = cor(Total_HIP, total_avc, method = "pearson"))
print(cor_results)
ggplot(merged, aes(x = Total_HIP, y = total_avc, color = grupo)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~ grupo) +
labs(
title = "Correlação entre Hipertensão e AVC por Grupo Etário",
x = "Total de Hipertensos",
y = "Total de Casos AVC"
) +
theme_minimal()
# Clean names
avc_all <- avc %>% janitor::clean_names()
# Fix column name
names(avc_all)[names(avc_all) == "n_o_de_registos_via_verde_avc"] <- "n_de_registos_via_verde_avc"
# Preparar AVC por grupo etário (sem filtro temporal)
avc_etario <- avc_all %>%
mutate(
faixa_inicio = as.numeric(str_extract(faixa_etaria_da_vitima, "^\\d+")),
grupo_etario = case_when(
faixa_inicio < 69 ~ "Menos de 65 anos",
TRUE ~ "65 anos ou mais"
),
mes_num = as.integer(str_sub(periodo, 6, 7)),
mes_nome = factor(meses_pt[mes_num], levels = meses_pt),
n_de_registos_via_verde_avc = as.numeric(n_de_registos_via_verde_avc)
) %>%
group_by(mes_nome, grupo_etario) %>%
summarise(total_avc = sum(n_de_registos_via_verde_avc, na.rm = TRUE), .groups = "drop")
# Dados de hipertensão sem filtro de datas
hyp_all <- hyp_final %>%
st_set_geometry(NULL) %>%
mutate(Data = ym(tempo))
# Hipertensão total por mês
hip_total_mes <- hyp_all %>%
mutate(Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(total_hip = sum(as.numeric(total), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name))
# Hipertensão <65 por mês
hip_menos_65_mes <- hyp_all %>%
mutate(Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(hip_menos_65 = sum(as.numeric(contagem_de_utentes_inscritos_com_hipertensao_arterial_com_pressao_arterial_inferior_a_150_90_mmhg_n), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name))
# Combinar dados de hipertensão
hip_comp_mes <- hip_total_mes %>%
left_join(hip_menos_65_mes, by = "Mes") %>%
mutate(
hip_menos_65 = ifelse(is.na(hip_menos_65), 0, hip_menos_65),
hip_mais_65 = total_hip - hip_menos_65,
mes_nome = mes_lookup[Mes],  # <- Se necessário, fornecer o vetor mes_lookup
mes_nome = factor(mes_nome, levels = meses_pt)
) %>%
select(mes_nome, hip_menos_65, hip_mais_65) %>%
pivot_longer(
cols = c("hip_menos_65", "hip_mais_65"),
names_to = "grupo_etario",
values_to = "total_hip"
) %>%
mutate(
grupo_etario = recode(grupo_etario,
"hip_menos_65" = "Menos de 65 anos",
"hip_mais_65" = "65 anos ou mais")
)
# Clean names
avc_all <- avc %>% janitor::clean_names()
# Fix column name
names(avc_all)[names(avc_all) == "n_o_de_registos_via_verde_avc"] <- "n_de_registos_via_verde_avc"
# Preparar AVC por grupo etário (sem filtro temporal)
avc_etario <- avc_all %>%
mutate(
faixa_inicio = as.numeric(str_extract(faixa_etaria_da_vitima, "^\\d+")),
grupo_etario = case_when(
faixa_inicio < 69 ~ "Menos de 65 anos",
TRUE ~ "65 anos ou mais"
),
mes_num = as.integer(str_sub(periodo, 6, 7)),
mes_nome = factor(meses_pt[mes_num], levels = meses_pt),
n_de_registos_via_verde_avc = as.numeric(n_de_registos_via_verde_avc)
) %>%
group_by(mes_nome, grupo_etario) %>%
summarise(total_avc = sum(n_de_registos_via_verde_avc, na.rm = TRUE), .groups = "drop")
# Dados de hipertensão sem filtro de datas
hyp_all <- hyp_final %>%
st_set_geometry(NULL) %>%
mutate(Data = ym(tempo))
# Hipertensão total por mês
hip_total_mes <- hyp_all %>%
mutate(Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(total_hip = sum(as.numeric(total), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name))
# Hipertensão <65 por mês
hip_menos_65_mes <- hyp_all %>%
mutate(Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(hip_menos_65 = sum(as.numeric(contagem_de_utentes_inscritos_com_hipertensao_arterial_com_pressao_arterial_inferior_a_150_90_mmhg_n), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name))
# Combinar dados de hipertensão
hip_comp_mes <- hip_total_mes %>%
left_join(hip_menos_65_mes, by = "Mes") %>%
mutate(
hip_menos_65 = ifelse(is.na(hip_menos_65), 0, hip_menos_65),
hip_mais_65 = total_hip - hip_menos_65,
mes_nome = mes_lookup[Mes],  # <- Se necessário, fornecer o vetor mes_lookup
mes_nome = factor(mes_nome, levels = meses_pt)
) %>%
select(mes_nome, hip_menos_65, hip_mais_65) %>%
pivot_longer(
cols = c("hip_menos_65", "hip_mais_65"),
names_to = "grupo_etario",
values_to = "total_hip"
) %>%
mutate(
grupo_etario = recode(grupo_etario,
"hip_menos_65" = "Menos de 65 anos",
"hip_mais_65" = "65 anos ou mais")
)
# Clean names
avc <- avc %>% janitor::clean_names()
# Fix column name
names(avc)[names(avc) == "n_o_de_registos_via_verde_avc"] <- "n_de_registos_via_verde_avc"
# Dividimos o AVC em maiores de 65 anos e menores de 65 anos
avc_clean <- avc %>%
mutate(
faixa_inicio = as.numeric(str_extract(faixa_etaria_da_vitima, "^\\d+")),
faixa_fim = as.numeric(str_extract(faixa_etaria_da_vitima, "\\d+$")),
grupo = case_when(
faixa_inicio < 69 ~ "Menos de 65 anos",
TRUE ~ "65 anos ou mais"
),
mes_num = as.integer(str_sub(periodo, 6, 7)),
mes = factor(meses_pt[mes_num], levels = meses_pt),
n_de_registos_via_verde_avc = as.numeric(n_de_registos_via_verde_avc)
) %>%
group_by(mes, grupo) %>%
summarise(total_avc = sum(n_de_registos_via_verde_avc, na.rm = TRUE), .groups = "drop")
# Processamento da hipertensão SEM filtro de tempo
hyp_processo <- hyp_final %>%
st_set_geometry(NULL) %>%
mutate(Data = ym(tempo))
# Hipertensão total por mês
hipertensao_mes <- hyp_processo %>%
mutate(Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(total = sum(as.numeric(total), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name))
# Hipertensão por mês para pessoas com menos de 65 anos
hipertensao_mes_65 <- hyp_processo %>%
mutate(Mes = month(Data, label = TRUE, abbr = FALSE)) %>%
group_by(Mes) %>%
summarise(hip_65 = sum(as.numeric(contagem_de_utentes_inscritos_com_hipertensao_arterial_com_pressao_arterial_inferior_a_150_90_mmhg_n), na.rm = TRUE), .groups = "drop") %>%
arrange(match(Mes, month.name))
# Combinar dados e preparar gráfico empilhado
hipertensao_comp_mes <- hipertensao_mes %>%
left_join(hipertensao_mes_65, by = "Mes") %>%
mutate(
hip_65 = ifelse(is.na(hip_65), 0, hip_65),
hip_mais_65 = total - hip_65,
Mes = mes_lookup[Mes],
Mes = factor(Mes, levels = meses_pt)
) %>%
select(Mes, hip_65, hip_mais_65) %>%
pivot_longer(
cols = c("hip_65", "hip_mais_65"),
names_to = "Grupo",
values_to = "Total_hip"
) %>%
mutate(
Grupo = dplyr::recode(Grupo,
"hip_65" = "Menos de 65 anos",
"hip_mais_65" = "65 anos ou mais")
)
# Gráfico empilhado
ggplot(hipertensao_comp_mes, aes(x = Mes, y = Total_hip, fill = Grupo)) +
geom_col() +
labs(
title = "Hipertensão por Idade e Mês (Todos os dados disponíveis)",
x = "Mês",
y = "Número de Utentes"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
# Correlação
hipertensao_summary <- hipertensao_comp_mes %>%
group_by(Mes, Grupo) %>%
summarise(Total_HIP = sum(Total_hip), .groups = "drop") %>%
rename(mes = Mes, grupo = Grupo)
merged <- left_join(hipertensao_summary, avc_clean, by = c("mes", "grupo"))
cor_results <- merged %>%
group_by(grupo) %>%
summarise(correl = cor(Total_HIP, total_avc, method = "pearson"))
print(cor_results)
# Gráfico de correlação
ggplot(merged, aes(x = Total_HIP, y = total_avc, color = grupo)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE) +
facet_wrap(~ grupo) +
labs(
title = "Correlação entre Hipertensão e AVC por Grupo Etário",
x = "Total de Hipertensos",
y = "Total de Casos AVC"
) +
theme_minimal()
library(tidyverse)
library(ggplot2)
library(car)
df <- read.csv("/Users/marianahenriques/Documents/Life_Expectancy_Data.csv", header = TRUE)
# 2014 data
df_2014 <- subset(df, Year == 2014)
#colSums(is.na(df_2014)) #seeing the missing values
# Remove rows with any missing values (NA)
df_2014_clean <- na.omit(df_2014)
df_2014_clean <- df_2014_clean[, -2]
# In status, developing is replaced by 0 and developed by 1
df_2014_clean[, 2] <- ifelse(df_2014_clean[, 2] == "Developed", 1, 0)
print(df_2014_clean)
